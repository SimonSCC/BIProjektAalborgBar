<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/14/2021 8:40:40 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-8MNAKIP"
  DTS:CreatorName="DESKTOP-8MNAKIP\Tobias"
  DTS:DTSID="{B09343C6-ADDB-478C-8D92-9DCFB507E574}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.152"
  DTS:LocaleID="1033"
  DTS:ObjectName="ImportDateDimension"
  DTS:PackageType="5"
  DTS:VersionBuild="90"
  DTS:VersionGUID="{F77E9873-C702-46CD-8AC5-22481DF64D0C}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Import Date"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{B065FA76-8320-4E3B-A5BB-597812C8374D}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Date"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import Date\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[Dimension].[Date]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Date\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="{4FA198D2-2B35-4AEE-962E-CA800AD165C6}:external"
                  connectionManagerRefId="Project.ConnectionManagers[MSSQLServer.BIProjektDW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DateKey]"
                      cachedDataType="dbDate"
                      cachedName="DateKey"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DateKey]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[DateKey]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Day]"
                      cachedDataType="ui1"
                      cachedName="Day"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Day]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[Day]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DaySuffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="2"
                      cachedName="DaySuffix"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DaySuffix]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[DaySuffix]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[WeekDay]"
                      cachedDataType="ui1"
                      cachedName="WeekDay"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Weekday]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekDay]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[WeekdayName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedName="WeekdayName"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[WeekDayName]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekdayName]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DOWInMonth]"
                      cachedDataType="ui1"
                      cachedName="DOWInMonth"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DOWInMonth]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[DOWInMonth]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DayOfYear]"
                      cachedDataType="ui2"
                      cachedName="DayOfYear"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfYear]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[DayOfYear]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[WeekOfMonth]"
                      cachedDataType="ui1"
                      cachedName="WeekOfMonth"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[WeekOfMonth]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekOfMonth]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[WeekOfYear]"
                      cachedDataType="ui1"
                      cachedName="WeekOfYear"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[WeekOfYear]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekOfYear]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Month]"
                      cachedDataType="ui1"
                      cachedName="Month"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Month]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[Month]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MonthName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedName="MonthName"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MonthName]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[MonthName]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Quarter]"
                      cachedDataType="ui1"
                      cachedName="Quarter"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Quarter]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[Quarter]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuarterName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="6"
                      cachedName="QuarterName"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuarterName]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[QuarterName]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Year]"
                      cachedDataType="i4"
                      cachedName="Year"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Year]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[Year]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MMYYYY]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="6"
                      cachedName="MMYYYY"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MMYYYY]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[MMYYYY]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MonthYear]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="7"
                      cachedName="MonthYear"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MonthYear]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[MonthYear]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[IsWeekend]"
                      cachedDataType="bool"
                      cachedName="IsWeekend"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsWeekend]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[IsWeekend]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[WeekdayNameShort]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="3"
                      cachedName="WeekdayNameShort"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[WeekDayName_Short]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekdayNameShort]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[WeekdayNameFirstLetter]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1"
                      cachedName="WeekdayNameFirstLetter"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[WeekDayName_FirstLetter]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekdayNameFirstLetter]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MonthNameShort]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="3"
                      cachedName="MonthNameShort"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MonthName_Short]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[MonthNameShort]" />
                    <inputColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MonthNameFirstLetter]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1"
                      cachedName="MonthNameFirstLetter"
                      externalMetadataColumnId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MonthName_FirstLetter]"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[MonthNameFirstLetter]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DateKey]"
                      dataType="dbDate"
                      name="DateKey" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Day]"
                      dataType="ui1"
                      name="Day" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DaySuffix]"
                      codePage="1252"
                      dataType="str"
                      length="2"
                      name="DaySuffix" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Weekday]"
                      dataType="ui1"
                      name="Weekday" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[WeekDayName]"
                      codePage="1252"
                      dataType="str"
                      length="10"
                      name="WeekDayName" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[WeekDayName_Short]"
                      codePage="1252"
                      dataType="str"
                      length="3"
                      name="WeekDayName_Short" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[WeekDayName_FirstLetter]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="WeekDayName_FirstLetter" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DOWInMonth]"
                      dataType="ui1"
                      name="DOWInMonth" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfYear]"
                      dataType="i2"
                      name="DayOfYear" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[WeekOfMonth]"
                      dataType="ui1"
                      name="WeekOfMonth" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[WeekOfYear]"
                      dataType="ui1"
                      name="WeekOfYear" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Year]"
                      dataType="i4"
                      name="Year" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Quarter]"
                      dataType="ui1"
                      name="Quarter" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Month]"
                      dataType="ui1"
                      name="Month" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MonthName]"
                      codePage="1252"
                      dataType="str"
                      length="10"
                      name="MonthName" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MonthName_Short]"
                      codePage="1252"
                      dataType="str"
                      length="3"
                      name="MonthName_Short" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MonthName_FirstLetter]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="MonthName_FirstLetter" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuarterName]"
                      codePage="1252"
                      dataType="str"
                      length="6"
                      name="QuarterName" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsWeekend]"
                      dataType="bool"
                      name="IsWeekend" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MMYYYY]"
                      codePage="1252"
                      dataType="str"
                      length="6"
                      name="MMYYYY" />
                    <externalMetadataColumn
                      refId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MonthYear]"
                      codePage="1252"
                      dataType="str"
                      length="7"
                      name="MonthYear" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Date\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Date\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Date\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Date\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Date\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Date\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_5c9ca2fe74ce45aba06fe90b21d5c4f8.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{213b5544-e1e8-43e0-ae9c-ef27e9a55ed9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_5c9ca2fe74ce45aba06fe90b21d5c4f8</RootNamespace>
    <AssemblyName>SC_5c9ca2fe74ce45aba06fe90b21d5c4f8</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_5c9ca2fe74ce45aba06fe90b21d5c4f8" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Globalization;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */


        DateTime endingDate = new DateTime(2009, 1, 1);
        DateTime startingDate = new DateTime(1996, 1, 1);
        for (DateTime date = startingDate; date <= endingDate; date = date.AddDays(1))
        {
            Output0Buffer.AddRow();
            Output0Buffer.DateKey = date;


            switch (date.Day)
            {
                case 1:
                case 21:
                case 31:
                    Output0Buffer.DaySuffix = "st";
                    break;
                case 2:
                case 22:
                    Output0Buffer.DaySuffix = "nd";
                    break;

                case 3:
                case 23:
                    Output0Buffer.DaySuffix = "rd";
                    break;

                default:
                    Output0Buffer.DaySuffix = "th";
                    break;


            }


            Output0Buffer.DayOfYear = (ushort)date.DayOfYear;
            Output0Buffer.Month = (byte)date.Month;
            switch (date.Month)
            {
                case 1:
                    {
                        Output0Buffer.MonthName = "January";
                        Output0Buffer.MonthNameShort = "Jan";
                        Output0Buffer.MonthNameFirstLetter = "J";
                        break;
                    }
                case 2:
                    {
                        Output0Buffer.MonthName = "February";
                        Output0Buffer.MonthNameShort = "Feb";
                        Output0Buffer.MonthNameFirstLetter = "F";
                        break;
                    }
                case 3:
                    {
                        Output0Buffer.MonthName = "March";
                        Output0Buffer.MonthNameShort = "Mar";
                        Output0Buffer.MonthNameFirstLetter = "M";
                        break;
                    }
                case 4:
                    {
                        Output0Buffer.MonthName = "April";
                        Output0Buffer.MonthNameShort = "Apr";
                        Output0Buffer.MonthNameFirstLetter = "A";
                        break;
                    }
                case 5:
                    {
                        Output0Buffer.MonthName = "May";
                        Output0Buffer.MonthNameShort = "May";
                        Output0Buffer.MonthNameFirstLetter = "M";
                        break;
                    }
                case 6:
                    {
                        Output0Buffer.MonthName = "June";
                        Output0Buffer.MonthNameShort = "Jun";
                        Output0Buffer.MonthNameFirstLetter = "J";
                        break;
                    }
                case 7:
                    {
                        Output0Buffer.MonthName = "July";
                        Output0Buffer.MonthNameShort = "Jul";
                        Output0Buffer.MonthNameFirstLetter = "J";
                        break;
                    }
                case 8:
                    {
                        Output0Buffer.MonthName = "August";
                        Output0Buffer.MonthNameShort = "Aug";
                        Output0Buffer.MonthNameFirstLetter = "A";
                        break;
                    }
                case 9:
                    {
                        Output0Buffer.MonthName = "September";
                        Output0Buffer.MonthNameShort = "Sep";
                        Output0Buffer.MonthNameFirstLetter = "S";
                        break;
                    }
                case 10:
                    {
                        Output0Buffer.MonthName = "October";
                        Output0Buffer.MonthNameShort = "Oct";
                        Output0Buffer.MonthNameFirstLetter = "O";
                        break;
                    }
                case 11:
                    {
                        Output0Buffer.MonthName = "November";
                        Output0Buffer.MonthNameShort = "Nov";
                        Output0Buffer.MonthNameFirstLetter = "N";
                        break;
                    }
                case 12:
                    {
                        Output0Buffer.MonthName = "December";
                        Output0Buffer.MonthNameShort = "Dec";
                        Output0Buffer.MonthNameFirstLetter = "D";
                        break;
                    }
            }
            Output0Buffer.Day = (byte)date.Day;
            Output0Buffer.MonthYear = (date.Year.ToString() + "/" + date.Month.ToString());
            Output0Buffer.MMYYYY = date.Month.ToString() + date.Year.ToString();
            Output0Buffer.Year = date.Year;
            if (date.Month < 4)
            {
                Output0Buffer.Quarter = 1;
                Output0Buffer.QuarterName = "First";
            }
            else if (date.Month < 7)
            {
                Output0Buffer.Quarter = 2;
                Output0Buffer.QuarterName = "Second";
            }
            else if (date.Month < 10)
            {
                Output0Buffer.Quarter = 3;
                Output0Buffer.QuarterName = "Third";
            }
            else
            {
                Output0Buffer.Quarter = 4;
                Output0Buffer.QuarterName = "Fourth";
            }

            Output0Buffer.WeekOfYear =
                (byte)new GregorianCalendar(GregorianCalendarTypes.Localized).GetWeekOfYear(date, CalendarWeekRule.FirstFourDayWeek, DayOfWeek.Monday);

            Output0Buffer.WeekOfMonth = GetWeekNumberOfMonth(date);

            //Output0Buffer.WeekDay = (byte)(date.DayOfWeek + 1);

            if ((int)date.DayOfWeek > 5)
            {
                Output0Buffer.IsWeekend = true;
            }
            else
            {
                Output0Buffer.IsWeekend = false;
            }
            Output0Buffer.WeekdayName = date.DayOfWeek.ToString();
            Output0Buffer.WeekdayNameShort = date.DayOfWeek.ToString()[0].ToString() + date.DayOfWeek.ToString()[1].ToString();
            //Output0Buffer.WeekdayNameShort = date.DayOfWeek.ToString().Remove(2, date.DayOfWeek.ToString().Length - 2);
            //Output0Buffer.WeekdayNameFirstLetter = date.DayOfWeek.ToString().Remove(1, 2);
            Output0Buffer.WeekdayNameFirstLetter = date.DayOfWeek.ToString()[0].ToString();

            Output0Buffer.DOWInMonth = (byte)date.Day;

            switch (date.DayOfWeek)
            {
                case DayOfWeek.Sunday:
                    Output0Buffer.WeekDay = 7;
                    break;
                case DayOfWeek.Monday:
                    Output0Buffer.WeekDay = 1;
                    break;
                case DayOfWeek.Tuesday:
                    Output0Buffer.WeekDay = 2;
                    break;
                case DayOfWeek.Wednesday:
                    Output0Buffer.WeekDay = 3;
                    break;
                case DayOfWeek.Thursday:
                    Output0Buffer.WeekDay = 4;
                    break;
                case DayOfWeek.Friday:
                    Output0Buffer.WeekDay = 5;
                    break;
                case DayOfWeek.Saturday:
                    Output0Buffer.WeekDay = 6;
                    break;
                default:
                    break;
            }

        }

        byte GetWeekNumberOfMonth(DateTime date)
        {
            //date = date.Date;
            //DateTime firstMonthDay = new DateTime(date.Year, date.Month, 1);
            //DateTime firstMonthMonday = firstMonthDay.AddDays((DayOfWeek.Monday + 7 - firstMonthDay.DayOfWeek) % 7);
            //if (firstMonthMonday > date)
            //{
            //    firstMonthMonday = firstMonthDay.AddMonths(-1).
            //        AddDays((DayOfWeek.Monday + 7 - firstMonthDay.DayOfWeek) % 7);
            //}
            //return (byte)
            //    ((date - firstMonthMonday).Days / 7 + 1);


            if (date.Day > 0 && date.Day <= 7)
            {
                return (byte)1;
            }
            else if (date.Day > 7 && date.Day <= 14)
            {
                return (byte)2;
            }
            else if (date.Day > 14 && date.Day <= 21)
            {
                return (byte)3;
            }

            return (byte)4;




        }

    }
}


]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime DateKey
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DateKey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Byte Day
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Day_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DaySuffix
    {
        set
        {
            this[2] = value;
        }
    }
    public bool DaySuffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Byte WeekDay
    {
        set
        {
            this[3] = value;
        }
    }
    public bool WeekDay_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WeekdayName
    {
        set
        {
            this[4] = value;
        }
    }
    public bool WeekdayName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WeekdayNameShort
    {
        set
        {
            this[5] = value;
        }
    }
    public bool WeekdayNameShort_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WeekdayNameFirstLetter
    {
        set
        {
            this[6] = value;
        }
    }
    public bool WeekdayNameFirstLetter_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Byte DOWInMonth
    {
        set
        {
            this[7] = value;
        }
    }
    public bool DOWInMonth_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt16 DayOfYear
    {
        set
        {
            this[8] = value;
        }
    }
    public bool DayOfYear_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Byte WeekOfMonth
    {
        set
        {
            this[9] = value;
        }
    }
    public bool WeekOfMonth_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Byte WeekOfYear
    {
        set
        {
            this[10] = value;
        }
    }
    public bool WeekOfYear_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Byte Month
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Month_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MonthName
    {
        set
        {
            this[12] = value;
        }
    }
    public bool MonthName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MonthNameShort
    {
        set
        {
            this[13] = value;
        }
    }
    public bool MonthNameShort_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MonthNameFirstLetter
    {
        set
        {
            this[14] = value;
        }
    }
    public bool MonthNameFirstLetter_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Byte Quarter
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Quarter_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String QuarterName
    {
        set
        {
            this[16] = value;
        }
    }
    public bool QuarterName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Year
    {
        set
        {
            this[17] = value;
        }
    }
    public bool Year_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MMYYYY
    {
        set
        {
            this[18] = value;
        }
    }
    public bool MMYYYY_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MonthYear
    {
        set
        {
            this[19] = value;
        }
    }
    public bool MonthYear_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsWeekend
    {
        set
        {
            this[20] = value;
        }
    }
    public bool IsWeekend_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5c9ca2fe74ce45aba06fe90b21d5c4f8.Properties.Settings.get_Default():SC_5c9ca2fe74ce45aba06fe90b21d5c4f8.Properties.Sett" +
    "ings")]

namespace SC_5c9ca2fe74ce45aba06fe90b21d5c4f8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_5c9ca2fe74ce45aba06fe90b21d5c4f8</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_5c9ca2fe74ce45aba06fe90b21d5c4f8</msb:DisplayName>
    <msb:ProjectId>{6DFE01E4-667B-422B-A8BD-374098AA0104}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_5c9ca2fe74ce45aba06fe90b21d5c4f8.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_5c9ca2fe74ce45aba06fe90b21d5c4f8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_5c9ca2fe74ce45aba06fe90b21d5c4f8")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5c9ca2fe74ce45aba06fe90b21d5c4f8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5c9ca2fe74ce45aba06fe90b21d5c4f8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5c9ca2fe74ce45aba06fe90b21d5c4f8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_5c9ca2fe74ce45aba06fe90b21d5c4f8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_5c9ca2fe74ce45aba06fe90b21d5c4f8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_5c9ca2fe74ce45aba06fe90b21d5c4f8.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
4QAkAH0pAAAAAIYIAQEQACUAiCkAAAAAhghbBOEAJgCgKQAAAACGCLgGAQAnALApAAAAAIYIxwTh
ACgAyCkAAAAAhgh4ABAAKQDTKQAAAACGCB8E4QAqAOspAAAAAIYI+gYQACsA9ikAAAAAhggCBeEA
LAAOKgAAAACGCKAA4QAtAB4qAAAAAIYIMQThAC4ANioAAAAAhgDHCQYALwA+KgAAAACGAAwJBgAv
AEYqAAAAAIYADwl7AC8ATioAAAAAhhiLBwYALwBuKgAAAADGAdQIBgAvAHAqAAAAAIEAjAAGAC8A
jCoAAAAAxgC7CfAALwBuKgAAAADGAeIIBgAzAOEqAAAAAIYYiwf8ADMA8CoAAAAAhhiLB/wANAD/
KgAAAACDGIsHBgA1AAcrAAAAAJMINwcCATUAMysAAAAAkwhQAQcBNQA6KwAAAACTCFwBDAE1AEIr
AAAAAJYIGwkSATYASSsAAAAAhhiLBwYANgBRKwAAAACRGJEHFwE2AAAAAQCQAQAAAQAwBwAAAgCI
CAAAAwCTBgAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAA
AQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBk
AwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAA
AQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBk
AwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQBkAwAAAQDaCAAAAgCYBwAAAwDMCAAABACTBgAA
AQBLCQAAAQBLCQAAAQBkAwkAiwcBABEAiwcGABkAiwcKACkAiwcQADEAiwcQADkAiwcQAEEAiwcQ
AEkAiwcQAFEAiwcQAFkAiwcQAGEAiwcQAGkAiwcGAIEAiwcGALEAiwcGANEAiwcVAKEASAMGAKEA
UwMGAHEAiwcmAHEA3AktAHEA3gYtAHEAjQMtAHEArwYtAOEAhAMxAOkA/gg1AOkA/gg8APEAiwdC
AAEB0AZIAHEAwANTAKkAhAMxAOkAwghYABEBhAMxAHEA9ghdAHEAzgNjAIkAiwdrAIkA9AV1AIkA
7AUBABkBiwcQAIkAxwkGAIkADAkGAIkADwl7AKEAiwcGAKEAbACDAKEAnAiKAKkAiwcGADkB0ACQ
ADkBBAqZALkAiwefANkAiwcGAC4ACwBDAS4AEwBMAS4AGwBrAS4AIwB0AS4AKwCdAS4AMwCdAS4A
OwCdAS4AQwB0AS4ASwCjAS4AUwCdAS4AWwC6AUMAYwAEAqAAawAEAuMAcwAEAgEBawAEAmkFewBr
AYkFewBrARsAfwADAAEABwArAAgALQAAAPwJGwEAAN0FIAEAAPQJJAEAAM4FIAEAANIJKAEAAKYF
IAEAAPAJJAEAAMoFIAEAABUBKAEAAHYEIAEAAIkJKAEAAIoFIAEAAHQHKAEAAE4FIAEAALUDJAEA
ALUEIAEAAPAGLAEAAPEEIAEAAKUDJAEAAJ4EIAEAANMGJAEAANsEIAEAALoDJAEAALoEIAEAAPcA
KAEAAEoEIAEAAHYJKAEAAHAFIAEAAFsHKAEAAC4FIAEAAE8HJAEAABsFIAEAAAUBKAEAAF8EIAEA
AAMHMAEAAAsFIAEAAHwAKAEAACMEIAEAAP4GKAEAAAYFIAEAAKQAIAEAADUEIAEAADsHNAEAAHAB
OQEAAB8JPgEBAAcAAwABAAgABQABAAkABwABAAoACQABAAsACwABAAwADQABAA0ADwABAA4AEQAB
AA8AEwABABAAFQABABEAFwABABIAGQABABMAGwABABQAHQABABUAHwABABYAIQABABcAIwABABgA
JQABABkAJwABABoAKQABABsAKwABABwALQABAB0ALwABAB4AMQABAB8AMwABACAANQABACEANwAB
ACIAOQABACMAOwABACQAPQABACUAPwABACYAQQABACcAQwABACgARQABACkARwABACoASQABACsA
SwABACwATQABAC0ATwABAC4AUQABAC8AUwABADAAVQACADwAVwACAD0AWQABAD4AWQACAD8AWwAE
gAAAAQAAAAAAAAAAAAAAAAA/AAAABAAAAAAAAAAAAAAApwCDAAAAAAAPAAAAAAAAAAAAAACwAFUJ
AAAAAA8AAAAAAAAAAAAAALAAmgkAAAAABAAAAAAAAAAAAAAApwD9BQAAAAAAAAAAAQAAAOYHAAAA
AAA8Q3JlYXRlTmV3T3V0cHV0Um93cz5nX19HZXRXZWVrTnVtYmVyT2ZNb250aHwyXzAASW50MzIA
VUludDE2AFNDXzVjOWNhMmZlNzRjZTQ1YWJhMDZmZTkwYjIxZDVjNGY4ADxNb2R1bGU+AEdldE91
dHB1dElEAHNldF9NTVlZWVkAbXNjb3JsaWIATWFya091dHB1dHNGaW5pc2hlZABzZXRfSXNXZWVr
ZW5kAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBD
YWxlbmRhcldlZWtSdWxlAHNldF9Nb250aE5hbWUAc2V0X1F1YXJ0ZXJOYW1lAHNldF9XZWVrZGF5
TmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBkYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0
dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9z
dEV4ZWN1dGUAQnl0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAGdl
dF9Nb250aABzZXRfTW9udGgAc2V0X1dlZWtPZk1vbnRoAHNldF9ET1dJbk1vbnRoAGdldF9EYXlP
ZldlZWsAb3BfTGVzc1RoYW5PckVxdWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ181YzljYTJm
ZTc0Y2U0NWFiYTA2ZmU5MGIyMWQ1YzRmOC5kbGwAc2V0X01NWVlZWV9Jc051bGwAc2V0X0lzV2Vl
a2VuZF9Jc051bGwAc2V0X01vbnRoTmFtZV9Jc051bGwAc2V0X1F1YXJ0ZXJOYW1lX0lzTnVsbABz
ZXRfV2Vla2RheU5hbWVfSXNOdWxsAHNldF9Nb250aF9Jc051bGwAc2V0X1dlZWtPZk1vbnRoX0lz
TnVsbABzZXRfRE9XSW5Nb250aF9Jc051bGwAc2V0X1llYXJfSXNOdWxsAHNldF9XZWVrT2ZZZWFy
X0lzTnVsbABzZXRfRGF5T2ZZZWFyX0lzTnVsbABzZXRfTW9udGhZZWFyX0lzTnVsbABzZXRfUXVh
cnRlcl9Jc051bGwAc2V0X01vbnRoTmFtZUZpcnN0TGV0dGVyX0lzTnVsbABzZXRfV2Vla2RheU5h
bWVGaXJzdExldHRlcl9Jc051bGwAc2V0X01vbnRoTmFtZVNob3J0X0lzTnVsbABzZXRfV2Vla2Rh
eU5hbWVTaG9ydF9Jc051bGwAc2V0X0RheVN1ZmZpeF9Jc051bGwAc2V0X0RheV9Jc051bGwAc2V0
X1dlZWtEYXlfSXNOdWxsAHNldF9EYXRlS2V5X0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3Rl
bQByZXNvdXJjZU1hbgBCb29sZWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lz
dGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2Vw
dGlvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABHcmVnb3JpYW5DYWxlbmRh
cgBnZXRfWWVhcgBzZXRfWWVhcgBzZXRfV2Vla09mWWVhcgBHZXRXZWVrT2ZZZWFyAGdldF9EYXlP
ZlllYXIAc2V0X0RheU9mWWVhcgBzZXRfTW9udGhZZWFyAENoYXIAT3V0cHV0MEJ1ZmZlcgBQaXBl
bGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBzZXRfUXVhcnRlcgBz
ZXRfTW9udGhOYW1lRmlyc3RMZXR0ZXIAc2V0X1dlZWtkYXlOYW1lRmlyc3RMZXR0ZXIALmN0b3IA
LmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzVjOWNhMmZlNzRjZTQ1YWJhMDZmZTkwYjIx
ZDVjNGY4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ181
YzljYTJmZTc0Y2U0NWFiYTA2ZmU5MGIyMWQ1YzRmOC5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBHcmVn
b3JpYW5DYWxlbmRhclR5cGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBT
ZXR0aW5ncwBDb25uZWN0aW9ucwBnZXRfQ2hhcnMAQnVmZmVycwBGaW5pc2hPdXRwdXRzAENyZWF0
ZU5ld091dHB1dFJvd3MAQWRkRGF5cwBDb25jYXQAT2JqZWN0AFNldEVuZE9mUm93c2V0AGdldF9E
ZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNy
b3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AHNldF9Nb250aE5hbWVTaG9ydABzZXRfV2Vla2RheU5h
bWVTaG9ydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQcmltZU91dHB1dABBZGRS
b3cAc2V0X0RheVN1ZmZpeABnZXRfRGF5AHNldF9EYXkAc2V0X1dlZWtEYXkAc2V0X0RhdGVLZXkA
Z2V0X0Fzc2VtYmx5AAAAAAAFcwB0AAAFbgBkAAAFcgBkAAAFdABoAAAPSgBhAG4AdQBhAHIAeQAA
B0oAYQBuAAADSgAAEUYAZQBiAHIAdQBhAHIAeQAAB0YAZQBiAAADRgAAC00AYQByAGMAaAAAB00A
YQByAAADTQAAC0EAcAByAGkAbAAAB0EAcAByAAADQQAAB00AYQB5AAAJSgB1AG4AZQAAB0oAdQBu
AAAJSgB1AGwAeQAAB0oAdQBsAAANQQB1AGcAdQBzAHQAAAdBAHUAZwAAE1MAZQBwAHQAZQBtAGIA
ZQByAAAHUwBlAHAAAANTAAAPTwBjAHQAbwBiAGUAcgAAB08AYwB0AAADTwAAEU4AbwB2AGUAbQBi
AGUAcgAAB04AbwB2AAADTgAAEUQAZQBjAGUAbQBiAGUAcgAAB0QAZQBjAAADRAAAAy8AAAtGAGkA
cgBzAHQAAA1TAGUAYwBvAG4AZAAAC1QAaABpAHIAZAAADUYAbwB1AHIAdABoAACAm0kAcwBOAHUA
bABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAg
AEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUA
IABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD08AdQB0AHAAdQB0ADAAAHFTAEMAXwA1
AGMAOQBjAGEAMgBmAGUANwA0AGMAZQA0ADUAYQBiAGEAMAA2AGYAZQA5ADAAYgAyADEAZAA1AGMA
NABmADgALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAADcPBL5GncxE
gi5L1f8c++oABCABAQgDIAABBSABARERBCABAQ4FIAEBEWUKBwURORE5CBE9AwYgAwEICAgDIAAI
AyAADgYAAw4ODg4FAAIODg4FIAEBEX0KIAMIETkRgIURPQQgABE9BCABAwgFIAEROQ0HAAICETkR
OQkgAwESSR0IEk0FIAIBCBwDIAACAwcBCAYAAggSTQ4FIAEdCAgIAAESgJ0RgKEFIAASgKUHIAIB
DhKApQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSDAMGElEDBhJdAwYSYQMGEiAFAAEFETkF
IAEBETkEIAEBAgQgAQEFBCABAQcLIAQBCB0IHRJJEk0FIAEBElEEAAASXQQAABJhBQABARJhBAAA
EiADAAABBCgAETkDKAACAygABQMoAA4DKAAHAygACAQIABJdBAgAEmEECAASIAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNWM5Y2EyZmU3NGNl
NDVhYmEwNmZlOTBiMjFkNWM0ZjgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZy
YW1ld29yayA0LjcEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABcRgAAAAAAAAAAAAB2RgAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAaEYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwD
AAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARM
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADUA
YwA5AGMAYQAyAGYAZQA3ADQAYwBlADQANQBhAGIAYQAwADYAZgBlADkAMABiADIAMQBkADUAYwA0
AGYAOAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANQBjADkAYwBhADIAZgBlADcANABj
AGUANAA1AGEAYgBhADAANgBmAGUAOQAwAGIAMgAxAGQANQBjADQAZgA4AC4AZABsAGwAAABIABIA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAg
ADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgA
KAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA1AGMAOQBjAGEAMgBm
AGUANwA0AGMAZQA0ADUAYQBiAGEAMAA2AGYAZQA5ADAAYgAyADEAZAA1AGMANABmADgALgBkAGwA
bAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANQBjADkAYwBhADIAZgBl
ADcANABjAGUANAA1AGEAYgBhADAANgBmAGUAOQAwAGIAMgAxAGQANQBjADQAZgA4AAAANAAIAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBz
AGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACINgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_5c9ca2fe74ce45aba06fe90b21d5c4f8</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">FA</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Import Date\Script Component.Outputs[Output0]"
                  hasSideEffects="true"
                  name="Output0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[DateKey]"
                      dataType="dbDate"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[DateKey]"
                      name="DateKey" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[Day]"
                      dataType="ui1"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[Day]"
                      name="Day" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[DaySuffix]"
                      codePage="1252"
                      dataType="str"
                      length="2"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[DaySuffix]"
                      name="DaySuffix" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekDay]"
                      dataType="ui1"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekDay]"
                      name="WeekDay" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekdayName]"
                      codePage="1252"
                      dataType="str"
                      length="10"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekdayName]"
                      name="WeekdayName" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekdayNameShort]"
                      codePage="1252"
                      dataType="str"
                      length="3"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekdayNameShort]"
                      name="WeekdayNameShort" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekdayNameFirstLetter]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekdayNameFirstLetter]"
                      name="WeekdayNameFirstLetter" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[DOWInMonth]"
                      dataType="ui1"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[DOWInMonth]"
                      name="DOWInMonth" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[DayOfYear]"
                      dataType="ui2"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[DayOfYear]"
                      name="DayOfYear" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekOfMonth]"
                      dataType="ui1"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekOfMonth]"
                      name="WeekOfMonth" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekOfYear]"
                      dataType="ui1"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[WeekOfYear]"
                      name="WeekOfYear" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[Month]"
                      dataType="ui1"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[Month]"
                      name="Month" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[MonthName]"
                      codePage="1252"
                      dataType="str"
                      length="10"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[MonthName]"
                      name="MonthName" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[MonthNameShort]"
                      codePage="1252"
                      dataType="str"
                      length="3"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[MonthNameShort]"
                      name="MonthNameShort" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[MonthNameFirstLetter]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[MonthNameFirstLetter]"
                      name="MonthNameFirstLetter" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[Quarter]"
                      dataType="ui1"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[Quarter]"
                      name="Quarter" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[QuarterName]"
                      codePage="1252"
                      dataType="str"
                      length="6"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[QuarterName]"
                      name="QuarterName" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[Year]"
                      dataType="i4"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[Year]"
                      name="Year" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[MMYYYY]"
                      codePage="1252"
                      dataType="str"
                      length="6"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[MMYYYY]"
                      name="MMYYYY" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[MonthYear]"
                      codePage="1252"
                      dataType="str"
                      length="7"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[MonthYear]"
                      name="MonthYear" />
                    <outputColumn
                      refId="Package\Import Date\Script Component.Outputs[Output0].Columns[IsWeekend]"
                      dataType="bool"
                      lineageId="Package\Import Date\Script Component.Outputs[Output0].Columns[IsWeekend]"
                      name="IsWeekend" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import Date.Paths[Output0]"
              endId="Package\Import Date\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output0"
              startId="Package\Import Date\Script Component.Outputs[Output0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Date Table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{84309E54-9D9C-422C-B731-91EAA2248AC4}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Date Table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{4FA198D2-2B35-4AEE-962E-CA800AD165C6}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="USE BIProjektDW;&#xA;ALTER TABLE Fact.Sale&#xA;DROP CONSTRAINT FK_Fact_Sale_DateKey_Dimension_Date_DateKey;&#xA;TRUNCATE TABLE Dimension.Date;&#xA;&#x9;&#x9;ALTER TABLE Fact.Sale ADD CONSTRAINT FK_Fact_Sale_DateKey_Dimension_Date_DateKey FOREIGN KEY (DateKey)&#xA;&#x9;&#x9;REFERENCES Dimension.[Date](DateKey)&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{CA558F69-C4E0-4F0E-B1C4-2334EEEE3189}"
      DTS:From="Package\Truncate Date Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Import Date" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="136,42"
          Id="Package\Import Date"
          TopLeft="26.5,123.5" />
        <NodeLayout
          Size="175,42"
          Id="Package\Truncate Date Table"
          TopLeft="14,21" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="98,63">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.5"
              Start="0,0"
              End="0,53">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import Date">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Import Date\Script Component"
          TopLeft="227,65" />
        <NodeLayout
          Size="171,42"
          Id="Package\Import Date\OLE DB Destination"
          TopLeft="230,213" />
        <EdgeLayout
          Id="Package\Import Date.Paths[Output0]"
          TopLeft="312,107">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,106"
              Start="0,0"
              End="0,98.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,98.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,41.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Date\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>